# assuming, that HDMI is connected to /dev/fb0

# export gpio which controls HDMI MUX [ 1 -> out, 0 -> in ]  
echo 136 > /sys/class/gpio/export
echo "out" > /sys/class/gpio/gpio136/direction

# set out mode SOM generate hdmi signals 
echo 1 > /sys/class/gpio/gpio136/value   

# set in mode SOM capture hdmi signals 
echo 0 > /sys/class/gpio/gpio136/value   

# enable hdmi 
echo 0 > /sys/class/graphics/fb0/blank

# disable hdmi 
echo 0 > /sys/class/graphics/fb0/blank

# set resolution  
fbset -g 1024 600 1024 600 24

# draw sample image [1024x600] 
fbi -T 2 -d /dev/fb0 uavx_1024_600.png

# draw noisy random image  
cat /dev/urandom >/dev/fb0

# read edid 
cat /sys/devices/soc0/soc/20e0000.hdmi_video/edid

# read hdmi mode
cat /sys/class/graphics/fb0/mode

#
# Automatically export GPIO pins (to create /sys/class/gpio/gpioXX) and assign them to gpio group, do following:
# create file: 
# "nano /etc/udev/rules.d/10-local.rules"
# append lines to end:
# ACTION=="add", SUBSYSTEM=="gpio", PROGRAM="/bin/sh -c 'echo 136 > /sys/class/gpio/export'"
# ACTION=="add", SUBSYSTEM=="gpio", PROGRAM="/bin/sh -c 'chown -R root:gpio /sys/class/gpio/gpio136/'"
# ACTION=="add", SUBSYSTEM=="gpio", PROGRAM="/bin/sh -c 'chmod -R 774 /sys/class/gpio/gpio136/'"
# ACTION=="add", SUBSYSTEM=="gpio", PROGRAM="/bin/sh -c 'echo 1 /sys/class/gpio/gpio136/value'"